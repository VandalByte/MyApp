#### 07/06/2024 - Friday
===# Working with colors #==========================================================================

Colors can be defined in the colors.xml file which is defined by the android OS

===# Working with dimensions #======================================================================

android:layout_width="wrap_content"
   -> this wraps the button layout around the content
android:layout_width="match_parent"
   -> this matches the parent dimension

Other personal dimensions can be defined in ../values/dimens.xml
    dp = density independent pixel
    sp = scale independent pixels / text size

Example:
    <resources>
        <dimen name="mydimen">300dp</dimen>
    </resources>

===# Work ease #====================================================================================

To easily add things to /values .xml files, click hint then "Extract string resource"
    -> To externalizing resource: To maintain them independently

Assignment:
https://github.com/google-developer-training/android-basics-kotlin-birthday-card-with-image-app-solution

#### 08/06/2024 - Saturday
===# Working with logs #============================================================================

In MainActivity.kt ==>

    fun clickHandler(view: View) {
        Log.i("button_click", "clickHandler: button clicked")
    }

In activity_main.xml, add this to the button properties ==>
    android:onClick="clickHandler"         # clickHandler is the name of the function

Now use Logcat to view the logs
    Log.d ==> for debug info
    Log.e ==> for error info

===# Playing with multiple activities #=============================================================

To start the dialer app's dialer activity when pressing a button:
    URI ==> Uniform Resource Identifier : passing data to the activity

    fun clickHandler(view: View) {
        Log.i("button_click", "clickHandler: button clicked")
        val dialIntent: Intent = Intent(Intent.ACTION_DIAL, Uri.parse("tel:9342345500"))
        startActivity(dialIntent)
    }

To open a website:
    val webIntent: Intent = Intent(Intent.ACTION_VIEW, Uri.parse("https://www.google.com"))

Documentation:
Page for other Intents: https://developer.android.com/guide/components/intents-common

===# Making strings with other languages #==========================================================

Goto values folder then create a new resource file, 'strings' and select locale from bottom and
select your language. It will create a new strings.xml file on different folder, here you can copy
paste the items from main strings.xml and replace the locale like:

    <string name="app_name">Мое заявление</string>

#### 10/06/2024 - Monday
===# Working with OOPs #============================================================================

Class is like a blueprint and object is like a mold of that blueprint.

var - mutable
val - immutable

===# FUNCTIONS

fun tempToday(day:String, temp:String){
    println("It's a beautiful $day with temperatures $temp")
}

// compact function (one-liner for small func)
fun double(x:Int):Int = x * 2

#### 11/06/2024 - Tuesday
===# Working with Lambdas #============================================================================

// use of lambda
fun main() {
    val multiply: (Int, Int) -> Int = { a, b -> a * b }
    println(multiply(3, 6))
}

// func returning null or string
fun nullableFunction(): String? {
    // logic
    return null
}

